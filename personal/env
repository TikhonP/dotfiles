#!/usr/bin/env zsh

addToPath() {
    if [[ "$PATH" != *"$1"* ]]; then
        export PATH=$PATH:$1
    fi
}

addToPathFront() {
    if [[ "$PATH" != *"$1"* ]]; then
        export PATH=$1:$PATH
    fi
}

# Stands for Open Project
op() {
    if [[ $# -eq 1 ]]; then
        selected=$1
    else
        projects_path=$HOME/projects
        selected=$(find $projects_path -maxdepth 1 -not -path $projects_path -type d | fzf)
    fi

    if [[ -z $selected ]]; then
        exit 0
    fi

    selected_name=$(basename "$selected" | tr . _)
    tmux_running=$(pgrep tmux)

    echo "$selected_name and $tmux_running, $TMUX"

    if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
        tmux new-session -s $selected_name -c $selected
        exit 0
    fi

    if [[ $tmux_running ]] && [[ -z $TMUX ]]; then
        tmux a
    fi

    if ! tmux has-session -t=$selected_name 2> /dev/null; then
        tmux new-session -ds $selected_name -c $selected
    fi

    tmux switch-client -t $selected_name
}

# Edit dotfiles config
conf() {
    target=$((find $XDG_CONFIG_HOME -type f ; find $HOME -maxdepth 1 -type f) | fzf)
    if [ ! -z "$target" ]
    then
        $VIM $target 
    fi
}

# Connect ssh server from given list
server() {
    if [ -z "$PRIVATE_SSH_SERVERS_PATH" ]; then
        echo "Error: PRIVATE_SSH_SERVERS_PATH is not set";
        return 1;
    fi
    selected_server=$(cat $PRIVATE_SSH_SERVERS_PATH | fzf --height 20% --layout=reverse --border)
    if [ ! -z "$selected_server" ]; then
        ssh $selected_server
    fi
}
alias s=server

# Stands for Fuzzy find vIM 
fim() {
    selected_file=$(find . | fzf)
    if [ ! -z "$selected_file" ]; then
        $VIM $selected_file
    fi
}

git_open() {
    open $(git config remote.origin.url | sed "s/git@\(.*\):\(.*\).git/https:\/\/\1\/\2/")/tree/$(git symbolic-ref --quiet --short HEAD )
}
